{% extends '::base.html.twig' %}

{% block title %}storybookmarks - {{ 'menu.items.tags'|trans }}{% endblock %}

{% block body %}
    {{ knp_menu_render('MainBundle:Builder:mainMenu', { 'currentClass': 'active' }) }}
    <div class="main">
        <div class="row">
            {{ include('MainBundle:Search:search.list.twig') }}
            {{ include('MainBundle:UserDropdown:user.html.twig') }}
        </div>
        {% for message in app.flashes('success') %}
            <div class="container">
                <div class="alert alert-success alert-dismissible fade show">
                    <button type="button" class="close" data-dismiss="alert">
                        <i class="fas fa-times"></i>
                    </button>
                    {{ message }}
                </div>
            </div>
        {% endfor %}
        <h1 class="ml-3">{{ 'menu.items.tags'|trans }}</h1>
        {% if tags|length > 0 %}
            <div class="row container tags-container mt-4">
                {% for tag in tags %}
                    <a class="chip mr-3" {% if tag.color is not null %}style="border: 1px solid {{ tag.color }}; color: {{ tag.color }}"{% endif %} href="{{ path('tags_edit', {'id': tag.id}) }}">
                        <i class="fas fa-tag pr-1 vertical-align-middle"></i>
                        {{ tag.title }}
                    </a>
                {% endfor %}
            </div>
        {% else %}
            <h3 class="text-center mt-4">{{ 'tags.without'|trans }}</h3>
        {% endif %}
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        window.onload = () => {
            const searchContainer = new Vue({
                el: '#search-container',
                delimiters: ['[[', ']]'],
                data: {
                    query: undefined,
                    bookmarks: [],
                    folders: [],
                    tags: []
                },
                methods: {
                    getQueryResults: function () {
                        if (this.query) {
                            axios.get('{{ url('search_index') }}' + '?query=' + this.query)
                                .then(result => {
                                    let json = result.data;
                                    this.bookmarks = json.bookmarks;
                                    this.folders = json.folders;
                                    this.tags = json.tags;
                                })
                        }
                        else {
                            this.bookmarks = [];
                            this.folders = [];
                            this.tags = [];
                        }
                    }
                }
            });
        };
    </script>
{% endblock %}