{% extends '::base.html.twig' %}

{% block title %}storybookmarks - {{ 'menu.items.bookmarks'|trans }}{% endblock %}

{% block body %}
    {{ knp_menu_render('MainBundle:Builder:mainMenu', { 'currentClass': 'active' }) }}
    <div class="main">
        <div class="row">
            {{ include('MainBundle:Search:search.list.twig') }}
            {{ include('MainBundle:UserDropdown:user.html.twig') }}
        </div>
        <h1 class="text-center">{{ 'new_tag.text'|trans }}</h1>
        <div class="form-container container">
            {{ form_start(form) }}
            <div class="form-group">
                {{ form_label(form.title, 'new_folder.fields.name'|trans) }}
                {{ form_widget(form.title, { 'attr': { 'class': 'form-control' } }) }}
            </div>
            <div class="form-group">
                {{ form_label(form.color, 'new_folder.fields.color'|trans) }}
                {{ form_widget(form.color, { 'attr': { 'class': 'form-control' } }) }}
            </div>
            <div class="text-center">
                <button type="submit" class="btn btn-primary">{{ 'generics.save'|trans }}</button>
            </div>
            {{ form_end(form) }}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        window.onload = () => {
            const searchContainer = new Vue({
                el: '#search-container',
                delimiters: ['[[', ']]'],
                data: {
                    query: undefined,
                    bookmarks: [],
                    folders: [],
                    tags: []
                },
                methods: {
                    getQueryResults: function () {
                        if (this.query) {
                            axios.get('{{ url('search_index') }}' + '?query=' + this.query)
                                .then(result => {
                                    let json = result.data;
                                    this.bookmarks = json.bookmarks;
                                    this.folders = json.folders;
                                    this.tags = json.tags;
                                })
                        }
                        else {
                            this.bookmarks = [];
                            this.folders = [];
                            this.tags = [];
                        }
                    }
                }
            });
        };
    </script>
{% endblock %}